[
    {
        "id": "7fdc16e3d3ab4b5d",
        "type": "tab",
        "label": "WaterBnB",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "5835621f32496e18",
        "type": "group",
        "z": "7fdc16e3d3ab4b5d",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "335366e6ad089e31",
            "caa94acdc2d64d85",
            "de420e41160fafe4"
        ],
        "x": 94,
        "y": 399,
        "w": 772,
        "h": 142
    },
    {
        "id": "829492578c71cb44",
        "type": "group",
        "z": "7fdc16e3d3ab4b5d",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "cd1905a07a93159f",
            "517c9cc1799bebb2"
        ],
        "x": 94,
        "y": 299,
        "w": 412,
        "h": 82
    },
    {
        "id": "ef30c4d2f5937cf0",
        "type": "group",
        "z": "7fdc16e3d3ab4b5d",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "909a22d407a57977",
            "db0d266945151365",
            "1f81432c7bd859cc",
            "7c65e60ed7c29f99",
            "9c3f4a7c97d12e9f"
        ],
        "x": 94,
        "y": 559,
        "w": 792,
        "h": 142
    },
    {
        "id": "77ef834177f84072",
        "type": "group",
        "z": "7fdc16e3d3ab4b5d",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "357805a7226cd496",
            "ad9d726f0e101666",
            "ae33792384652f7a"
        ],
        "x": 94,
        "y": 919,
        "w": 532,
        "h": 162
    },
    {
        "id": "543ba577b9404c80",
        "type": "group",
        "z": "7fdc16e3d3ab4b5d",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "ad1973871c0ae45e",
            "8c95b63a8088386f",
            "4d05aa401e043f9a",
            "75401931533ee2f3"
        ],
        "x": 94,
        "y": 739,
        "w": 812,
        "h": 142
    },
    {
        "id": "fdab8a626b61620a",
        "type": "inject",
        "z": "7fdc16e3d3ab4b5d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 190,
        "y": 200,
        "wires": [
            [
                "4dd82b375658ccc8"
            ]
        ]
    },
    {
        "id": "4dd82b375658ccc8",
        "type": "function",
        "z": "7fdc16e3d3ab4b5d",
        "name": "Téléportation",
        "func": "// create random position\nvar lat = 43.61999752 + Math.random() * 0.1;\nvar lon = 7.0499998 + Math.random() * 0.1;\nmsg.payload={\n    layer:\"swimming pools\",\n    lat:lat, \n    lon:lon, \n    name:global.get(\"clientid\"), \n    description: \"Temperature in my swimming pool\",\n    value: 20.5,\n    unit: \"°C\",\n    icon:\"male\", \n    color:\"#000\"};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 240,
        "wires": [
            [
                "ee73125b6e0dc772",
                "8fc3877da33c86de",
                "ac4ff02c96f853b3"
            ]
        ]
    },
    {
        "id": "a1ea4b1c13538fe2",
        "type": "ui_button",
        "z": "7fdc16e3d3ab4b5d",
        "name": "",
        "group": "75d6b7ece3b6429b",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Move Client",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-male",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 190,
        "y": 260,
        "wires": [
            [
                "4dd82b375658ccc8"
            ]
        ]
    },
    {
        "id": "909a22d407a57977",
        "type": "mqtt in",
        "z": "7fdc16e3d3ab4b5d",
        "g": "ef30c4d2f5937cf0",
        "name": "",
        "topic": "uca/iot/piscine",
        "qos": "0",
        "datatype": "utf8",
        "broker": "2440edb5d689cbd1",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 190,
        "y": 620,
        "wires": [
            [
                "1f81432c7bd859cc",
                "9c3f4a7c97d12e9f"
            ]
        ]
    },
    {
        "id": "db0d266945151365",
        "type": "debug",
        "z": "7fdc16e3d3ab4b5d",
        "g": "ef30c4d2f5937cf0",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 660,
        "wires": []
    },
    {
        "id": "1f81432c7bd859cc",
        "type": "json",
        "z": "7fdc16e3d3ab4b5d",
        "g": "ef30c4d2f5937cf0",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 390,
        "y": 660,
        "wires": [
            [
                "7c65e60ed7c29f99"
            ]
        ]
    },
    {
        "id": "ee73125b6e0dc772",
        "type": "worldmap-tracks",
        "z": "7fdc16e3d3ab4b5d",
        "name": "",
        "depth": "6",
        "layer": "combined",
        "smooth": false,
        "x": 650,
        "y": 220,
        "wires": [
            [
                "8fc3877da33c86de"
            ]
        ]
    },
    {
        "id": "8fc3877da33c86de",
        "type": "ui_worldmap",
        "z": "7fdc16e3d3ab4b5d",
        "group": "75d6b7ece3b6429b",
        "order": 2,
        "width": "0",
        "height": "0",
        "name": "",
        "lat": "43.61999752",
        "lon": "7.0499998",
        "zoom": "11",
        "layer": "OSMC",
        "cluster": "",
        "maxage": "",
        "usermenu": "show",
        "layers": "show",
        "panit": "false",
        "panlock": "false",
        "zoomlock": "false",
        "hiderightclick": "false",
        "coords": "deg",
        "showgrid": "true",
        "allowFileDrop": "false",
        "path": "/worldmap",
        "overlist": "DR,CO,RA,DN,TL,HM",
        "maplist": "OSMG,OSMC,EsriC,EsriS,EsriT,EsriO,EsriDG,NatGeo,UKOS,OpTop",
        "mapname": "",
        "mapurl": "",
        "mapopt": "",
        "mapwms": false,
        "x": 1220,
        "y": 380,
        "wires": []
    },
    {
        "id": "cd1905a07a93159f",
        "type": "ui_button",
        "z": "7fdc16e3d3ab4b5d",
        "g": "829492578c71cb44",
        "name": "",
        "group": "75d6b7ece3b6429b",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Reset",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 170,
        "y": 340,
        "wires": [
            [
                "517c9cc1799bebb2"
            ]
        ]
    },
    {
        "id": "517c9cc1799bebb2",
        "type": "function",
        "z": "7fdc16e3d3ab4b5d",
        "g": "829492578c71cb44",
        "name": "Reset Layer",
        "func": "// clear the \"by default\" layer \nmsg.payload = {\"command\": { \"clear\": \"swimming pools\" } };\nflow.set(\"clientid\", null);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 340,
        "wires": [
            [
                "8fc3877da33c86de"
            ]
        ]
    },
    {
        "id": "7c65e60ed7c29f99",
        "type": "function",
        "z": "7fdc16e3d3ab4b5d",
        "g": "ef30c4d2f5937cf0",
        "name": "json adapt",
        "func": "//http://stevesnoderedguide.com/node-red-functions\n\nvar nmsg = { // nouveau message \n  topic: msg.topic // on garde l'ancien topic \n};\n\nvar busy;\nif (msg.payload.piscine.oocuped === false)\n  busy = \"battery-empty\";\nelse\n  busy = \"battery-full\";\n\nvar hsc;\nif (msg.payload.piscine.hotspot === false)\n  hsc = \"Blue\";\nelse\n  hsc = \"Red\";\n\nvar wl_label = \"Lien de demande d'ouverture de \" + msg.payload.info.ident \n                + \" par \" + flow.get('clientid') + \" : Cliquez moi !\"\n\nvar weblinkUrl = \"https://WaterBnb-\" + msg.payload.info.ident.substring(2) \n                + \".onrender.com/open?idu=\" + flow.get('clientid') \n                + \"&idswp=\" + msg.payload.info.ident;\n\nnmsg.payload = { // on modifie/adapte la payload\n  layer: \"swimming pools\",\n  name: msg.payload.info.ident,\n  description: msg.payload.info.user,\n  weblink: { \"name\": wl_label, \"url\": weblinkUrl},\n  radius:100,\n  unit: \"C\",\n  color: \"#000\",\n  value: msg.payload.status.temperature,\n  lat: msg.payload.location.gps.lat,\n  lon: msg.payload.location.gps.lon,\n  iconColor: hsc,\n  icon: busy\n}\n\nreturn nmsg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 660,
        "wires": [
            [
                "8fc3877da33c86de",
                "db0d266945151365"
            ]
        ]
    },
    {
        "id": "357805a7226cd496",
        "type": "http in",
        "z": "7fdc16e3d3ab4b5d",
        "g": "77ef834177f84072",
        "name": "Open",
        "url": "/open",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 980,
        "wires": [
            [
                "ad9d726f0e101666",
                "ae33792384652f7a"
            ]
        ]
    },
    {
        "id": "ad9d726f0e101666",
        "type": "debug",
        "z": "7fdc16e3d3ab4b5d",
        "g": "77ef834177f84072",
        "name": "Open debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 510,
        "y": 960,
        "wires": []
    },
    {
        "id": "ae33792384652f7a",
        "type": "http response",
        "z": "7fdc16e3d3ab4b5d",
        "g": "77ef834177f84072",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 520,
        "y": 1040,
        "wires": []
    },
    {
        "id": "335366e6ad089e31",
        "type": "debug",
        "z": "7fdc16e3d3ab4b5d",
        "g": "5835621f32496e18",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 500,
        "wires": []
    },
    {
        "id": "caa94acdc2d64d85",
        "type": "ui_form",
        "z": "7fdc16e3d3ab4b5d",
        "g": "5835621f32496e18",
        "name": "WaterBnB Client Identification",
        "label": "WaterBnB Client Login (= numéro étudiant UCA)",
        "group": "75d6b7ece3b6429b",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Client ID",
                "value": "clientid",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "clientid": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "clientform",
        "topicType": "str",
        "splitLayout": false,
        "className": "",
        "x": 250,
        "y": 480,
        "wires": [
            [
                "335366e6ad089e31",
                "de420e41160fafe4"
            ]
        ]
    },
    {
        "id": "ac4ff02c96f853b3",
        "type": "debug",
        "z": "7fdc16e3d3ab4b5d",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 160,
        "wires": []
    },
    {
        "id": "ad1973871c0ae45e",
        "type": "mqtt in",
        "z": "7fdc16e3d3ab4b5d",
        "g": "543ba577b9404c80",
        "name": "",
        "topic": "uca/waterbnb/GillesM/a50",
        "qos": "2",
        "datatype": "utf8",
        "broker": "b25a627b9a12bc89",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 230,
        "y": 820,
        "wires": [
            [
                "4d05aa401e043f9a"
            ]
        ]
    },
    {
        "id": "8c95b63a8088386f",
        "type": "debug",
        "z": "7fdc16e3d3ab4b5d",
        "g": "543ba577b9404c80",
        "name": "debug from owntracks MQTT topic",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 840,
        "wires": []
    },
    {
        "id": "4d05aa401e043f9a",
        "type": "json",
        "z": "7fdc16e3d3ab4b5d",
        "g": "543ba577b9404c80",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 450,
        "y": 820,
        "wires": [
            [
                "8c95b63a8088386f",
                "75401931533ee2f3"
            ]
        ]
    },
    {
        "id": "75401931533ee2f3",
        "type": "function",
        "z": "7fdc16e3d3ab4b5d",
        "g": "543ba577b9404c80",
        "name": "json convert",
        "func": "// Convert json of owntracks to worldmap\nreturn {\n    payload: {\n        layer:\"waterbnb\",\n        name: msg.payload.tid,\n        lat: msg.payload.lat,\n        lon: msg.payload.lon,\n        icon: 'user-circle-o',\n        iconColor : \"Blue\"\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 780,
        "wires": [
            [
                "8fc3877da33c86de"
            ]
        ]
    },
    {
        "id": "9c3f4a7c97d12e9f",
        "type": "debug",
        "z": "7fdc16e3d3ab4b5d",
        "g": "ef30c4d2f5937cf0",
        "name": "debug  from swimming pools",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 600,
        "wires": []
    },
    {
        "id": "fe71c1c9fdb685bb",
        "type": "comment",
        "z": "7fdc16e3d3ab4b5d",
        "name": "Formulaire d'identification du client",
        "info": "Grâce au formulaire, on positionne une variable globale au flow : l'ident du client qui utilise le service.",
        "x": 1240,
        "y": 480,
        "wires": []
    },
    {
        "id": "de420e41160fafe4",
        "type": "function",
        "z": "7fdc16e3d3ab4b5d",
        "g": "5835621f32496e18",
        "name": "Callback du formulaire d'identification",
        "func": "// Ce node permet de stocker l'identificateur du \n// client dans le flow (un peu comme une variable \n// globale)\n\n\n//https://stevesnoderedguide.com/node-red-variables\n//https://techexplorations.com/guides/esp32/node-red-esp32-project/node-red-messages-variables/\n\nif (msg.topic === \"clientform\"){\n  flow.set(\"clientid\", msg.payload.clientid);\n  }\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "29f34b3c912ab0be",
        "type": "comment",
        "z": "7fdc16e3d3ab4b5d",
        "name": "Fichier WaterBnB.json => Dashboard \"donné\" à un client du service WaterBnB",
        "info": "Lorsqu'un client va vouloir accéder à une piscine, il va devoir utiliser cette interface graphique.\n",
        "x": 350,
        "y": 60,
        "wires": []
    },
    {
        "id": "ada1df21cd1fa063",
        "type": "comment",
        "z": "7fdc16e3d3ab4b5d",
        "name": "Reset display",
        "info": "",
        "x": 650,
        "y": 320,
        "wires": []
    },
    {
        "id": "ac3b258663dda004",
        "type": "comment",
        "z": "7fdc16e3d3ab4b5d",
        "name": "Affichage avec hyperlien d'ouverture des piscines ",
        "info": "",
        "x": 1280,
        "y": 620,
        "wires": []
    },
    {
        "id": "cd540d232d27291d",
        "type": "comment",
        "z": "7fdc16e3d3ab4b5d",
        "name": "Pour tester la réception de la demande d'ouverture",
        "info": "",
        "x": 870,
        "y": 1000,
        "wires": []
    },
    {
        "id": "08be5cdf00a9116b",
        "type": "comment",
        "z": "7fdc16e3d3ab4b5d",
        "name": "Affichage de la géolocalisation du client de WaterBnB",
        "info": "",
        "x": 1160,
        "y": 800,
        "wires": []
    },
    {
        "id": "8fd31df9a1487d0e",
        "type": "comment",
        "z": "7fdc16e3d3ab4b5d",
        "name": "trois choses à paramétrer => le topic de owntracks, le lien de demande d'ouverture et l'ID du client via le formulaire",
        "info": "Lorsqu'un client va vouloir accéder à une piscine, il va devoir utiliser cette interface graphique.\n",
        "x": 470,
        "y": 100,
        "wires": []
    },
    {
        "id": "5426b9fa8415a653",
        "type": "mqtt in",
        "z": "7fdc16e3d3ab4b5d",
        "name": "",
        "topic": "uca/iot/piscine/P_22005205",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "2440edb5d689cbd1",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 280,
        "y": 1220,
        "wires": [
            [
                "e020b51481e1dcf0"
            ]
        ]
    },
    {
        "id": "e020b51481e1dcf0",
        "type": "debug",
        "z": "7fdc16e3d3ab4b5d",
        "name": "debug 4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 1220,
        "wires": []
    },
    {
        "id": "13a4d84ff5225097",
        "type": "mqtt out",
        "z": "7fdc16e3d3ab4b5d",
        "name": "",
        "topic": "uca/iot/piscine/P_22005205",
        "qos": "0",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "2440edb5d689cbd1",
        "x": 320,
        "y": 1160,
        "wires": []
    },
    {
        "id": "8476a5c6d9468d41",
        "type": "inject",
        "z": "7fdc16e3d3ab4b5d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "AA",
        "payload": "A",
        "payloadType": "str",
        "x": 50,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "75d6b7ece3b6429b",
        "type": "ui_group",
        "z": "7fdc16e3d3ab4b5d",
        "name": "Service WaterBnB :",
        "tab": "6f331835acb4cdfb",
        "order": 1,
        "disp": true,
        "width": "20",
        "collapse": false,
        "className": ""
    },
    {
        "id": "2440edb5d689cbd1",
        "type": "mqtt-broker",
        "name": "Mosquitto broker",
        "broker": "test.mosquitto.org",
        "port": "1883",
        "tls": "",
        "clientid": "GMM",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "b25a627b9a12bc89",
        "type": "mqtt-broker",
        "name": "",
        "broker": "mqtt.eclipseprojects.io",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "15",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "6f331835acb4cdfb",
        "type": "ui_tab",
        "z": "7fdc16e3d3ab4b5d",
        "name": "WaterBnB",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    }
]